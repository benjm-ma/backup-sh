#!/bin/bash
#############################
#: Program : backup
#: Author  : Benjamin Ahola
#: Date    : 2015-05-16
#: Desc    : Simple backup script using tar The backup plan is a full backup 
#:	   : once a week and an incremental backup every day. This 
#: Options :
#:   -f    : Creates a level-0 backup
#:	   : 
#:   -i    : Creates a a level-n backup where if there exists an incremental
#:	   : backup of the same name ( a second backup was created for a single
#:	   : day ) then the level is incremented to the next.
#:	   : 
#############################


#############################
# Super User Authenticator
#  Determines if the super
#  user is running this script
# Params:
#  $1: Error Message explaining
#	why authentication 
#	is needed
############################
suAuth()
{
	if [ $EUID -ne 0 ]
	then
		printf "%s\n" $1 1>&2
		exit 1
	fi
}

#automated at the root level by default

BACKUPNAME=$( uname --kernel-version|\
		cut --delimiter=" " --fields=3,4|\
		tr ' ' '_' )
DESTVOL=bkdup
SRCDIR=backmeup

BACKUPPATH=$DESTVOL/$BACKUPNAME
METAFILE=$BACKUPPATH/$BACKUPNAME.snar

TAR_OPTIONS="--create --gzip --preserve-permissions\
		 --one-file-system --exclude='/tmp'\
		 --exclude='.cache' --verify --file="

OPTSTRING=if
getopts $OPTSTRING opt 

# Check to see if the destination is mounted
mount| grep "$DESTVOL" &>>/dev/null
if [ ! $? -eq 0 ]
then

	# Check config
	if [[ $UUID != "" ]]
	then
		# Are we super user? If not exit here
		suAuth "A default volume UUID was specified\
			however super user privlieges are required\
			to mount it\n"
		if [ -d $DESTVOL ]
		then
			mount --uuid $UUID $DESTVOL
		else
			mount --uuid $UUID /mnt
			if [ $? -eq 32 ]
				printf "Failed to mount backup volume\n" 1>&2
				exit 1
			fi
	else
	# Check fstab
		MOUNT_PARAMS="$( cat /etc/fstab| grep "$DESTVOL" 2>>/dev/null )"
	
		if [[ $MOUNT_PARAMS != "" ]] 
		then
			if [[ $( echo $MOUNT_PARAMS| grep "user" &>>/dev/null ) ]]
			then
				mount $DESTVOL
			else
				# Are we super user? If not exit here
				suAuth "No 'user' mount option specified\
					within /etc/fstab for $DESTVOL.\
					super user privlieges are required\
					to mount it."
				mount $DESTVOL
			fi
		fi 
	
		if [ $? -eq 1 ]
		then
			printf "Failed to mount $DESTVOL.\n" 1>&2
			exit 1
		fi
	fi
fi

case $opt in
	# Create level-0 dump
	f)
		if [ ! -d "$BACKUPPATH" ]
		then
			mkdir -p "$BACKUPPATH"
		fi

		tar $TAR_OPTIONS"$BACKUPPATH/$BACKUPNAME.tar.gz"\
			 --listed-incremental="$METAFILE"\
			 "$SRCDIR"

		umount $DESTVOL
		exit 0
	;;
	# Create level-n dump
	i)
		
		DATE=$( date -I )
		INC_BACKUPNAME=INC_${DATE#[0-9]*-}

		if [ -f "$BACKUPPATH/$INC_BACKUPNAME.1.tar.gz" ]
		then
			LEVELNUM=$( ls $BACKUPPATH| grep "$INC_BACKUPNAME\.*"| echo $(($(wc -l)+ 1)) )
			# Create level-n dump
			tar $TAR_OPTIONS"$BACKUPPATH/$INC_BACKUPNAME.$LEVELNUM.tar.gz"\
				--listed-incremental=$METAFILE\
				--level=$LEVELNUM\
				"$SRCDIR"
		else
			# Create level-1 dump
			tar $TAR_OPTIONS"$BACKUPPATH/$INC_BACKUPNAME.1.tar.gz"\
				 --listed-incremental="$METAFILE"\
				"$SRCDIR"
		fi

		umount $DESTVOL
		exit 0
	;;
	*)
		echo invalid option
		exit 1
esac


